

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'org.example'
version '1.0-SNAPSHOT'



application{
    mainClassName("application.Launcher")
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation 'org.jxmapviewer:jxmapviewer2:2.6'
    implementation 'com.google.firebase:firebase-admin:7.3.0'

}

test {
    useJUnitPlatform()
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml' ,'javafx.swing','javafx.base','javafx.graphics']
}
jar {
    /*
    //from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }}
    manifest {
        //inputs.files( configurations.runtimeClasspath )

        attributes(
                'Main-Class': 'gui.App'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    */
    baseName = 'test'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    manifest {
        inputs.files( configurations.runtimeClasspath )
        attributes 'Main-Class': 'application.Launcher'
    }

}
/*task customFatJar(type: Jar) {
    baseName = 'test'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    manifest {
        inputs.files( configurations.runtimeClasspath )
        attributes 'Main-Class': 'gui.Launcher'
    }
}*/
run{
    standardInput = System.in
}

mainClassName = 'application.Launcher'


